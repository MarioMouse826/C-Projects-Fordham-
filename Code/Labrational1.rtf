{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red99\green226\blue255;\red251\green30\blue255;\red0\green0\blue0;
\red235\green239\blue24;\red128\green255\blue167;\red50\green244\blue241;\red254\green215\blue216;}
{\*\expandedcolortbl;;\cssrgb\c44519\c90662\c100000;\cssrgb\c100000\c29675\c100000;\csgray\c0;
\cssrgb\c93803\c93590\c10850;\cssrgb\c55755\c100000\c71263;\cssrgb\c19572\c95778\c95688;\cssrgb\c100000\c87708\c87701;}
\margl1440\margr1440\vieww19580\viewh18220\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 #include\cf3 <bits/stdc++.h>\cf4 \
\cf5 using\cf4  \cf6 namespace\cf4  std;\
\
\cf7 // numberOfLabs to store number Of Labs in system\cf4 \
\cf6 int\cf4  numberOfLabs = \cf3 4\cf4 ;\
\
\cf7 // void createArrays(IntPtr labs[], int labsizes[]);\cf4 \
\cf7 // allocating memory to array in each lab according to lab size\cf4 \
\cf6 void\cf4  createArrays(\cf6 int\cf4 * labs[], \cf6 int\cf4  labsizes[])\{\
   \cf5 for\cf4 (\cf6 int\cf4  i=\cf3 0\cf4 ;i<numberOfLabs;i++)\{\
       \cf7 // allocating memory according to labsize\cf4 \
       \cf6 int\cf4  *temp;\
       temp = (\cf6 int\cf4 *)malloc(labsizes[i]*(\cf5 sizeof\cf4 (\cf6 int\cf4 )));\
\
       labs[i] = temp;\
\
       \cf5 for\cf4 (\cf6 int\cf4  j=\cf3 0\cf4 ;j<labsizes[i];j++)\{\
           labs[i][j] = -\cf3 1\cf4 ;\
       \}\
   \}\
\}\
\
\
\cf7 //void search(IntPtr labs[], int labsizes[],int ID) search an user in each lab and in each computer\cf4 \
\cf7 //third parameter is added to search for searching given ID in the labs\cf4 \
\cf6 void\cf4  search(\cf6 int\cf4 * labs[], \cf6 int\cf4  labsizes[],\cf6 int\cf4  ID)\{\
   \cf7 // take a flag to set if found and break the loop\cf4 \
\cf6 int\cf4  flag = \cf3 0\cf4 ;\
   \cf5 for\cf4 (\cf6 int\cf4  i=\cf3 0\cf4 ;i<numberOfLabs;i++)\{\
       \cf5 if\cf4 (flag == \cf3 1\cf4 )\
           \cf5 break\cf4 ;\
       \cf5 for\cf4 (\cf6 int\cf4  j=\cf3 0\cf4 ;j<labsizes[i];j++)\{\
           \cf5 if\cf4 (labs[i][j] == ID)\{\
               cout<<\cf3 "User "\cf4 <<ID<<\cf3 " logged in Lab "\cf4 <<(i+\cf3 1\cf4 )<<\cf3 " at computer "\cf4 <<(j+\cf3 1\cf4 )<<endl;\
               flag = \cf3 1\cf4 ;\
               \cf5 break\cf4 ;\
           \}\
       \}\
   \}\
   \cf7 // if user not found\cf4 \
   \cf5 if\cf4 (flag == \cf3 0\cf4 )\
       cout<<\cf3 "User not logged in"\cf4 <<endl;\
\}\
\
\cf7 //void logout(IntPtr labs[], int labsizes[],int ID) search an user in each lab and in each computer\cf4 \
\cf7 //third parameter is added to search for searching given user Id in the labs\cf4 \
\cf6 void\cf4  logout(\cf6 int\cf4 * labs[], \cf6 int\cf4  labsizes[],\cf6 int\cf4  ID)\{\
   \cf7 // take a flag to set if found and set it to empty\cf4 \
   \cf6 int\cf4  flag = \cf3 0\cf4 ;\
\
   \cf5 for\cf4 (\cf6 int\cf4  i=\cf3 0\cf4 ;i<numberOfLabs;i++)\{\
       \cf5 if\cf4 (flag == \cf3 1\cf4 )\
           \cf5 break\cf4 ;\
       \cf5 for\cf4 (\cf6 int\cf4  j=\cf3 0\cf4 ;j<labsizes[i];j++)\{\
           \cf5 if\cf4 (labs[i][j] == ID)\{\
               cout<<\cf3 "Logout user "\cf4 <<ID<<\cf3 " logged in Lab "\cf4 <<(i+\cf3 1\cf4 )<<\cf3 " at computer "\cf4 <<(j+\cf3 1\cf4 )<<endl;\
               labs[i][j] = -\cf3 1\cf4 ;\
               flag = \cf3 1\cf4 ;\
               \cf5 break\cf4 ;\
           \}\
       \}\
   \}\
   \cf7 // if user not found\cf4 \
   \cf5 if\cf4 (flag == \cf3 0\cf4 )\
       cout<<\cf3 "User not logged in"\cf4 <<endl;\
\
   \cf7 // LAb Status\cf4 \
   cout<<\cf3 "LAB STATUS\cf8 \\n\cf3 Lab # Computer Stations\cf8 \\n\cf3 "\cf4 ;\
   \cf6 int\cf4  i,j;\
      \cf5 for\cf4 (i=\cf3 0\cf4 ;i<numberOfLabs;i++)\{\
       cout<<(i+\cf3 1\cf4 )<<\cf3 " "\cf4 ;\
       \cf5 for\cf4 (j=\cf3 0\cf4 ;j<labsizes[i];j++)\{\
           cout<<(j+\cf3 1\cf4 )<<\cf3 ":"\cf4 ;\
           \cf5 if\cf4 (labs[i][j] == -\cf3 1\cf4 )\{\
               cout<<\cf3 "empty "\cf4 ;\
           \}\
           \cf5 else\cf4 \{\
               cout<<labs[i][j]<<\cf3 " "\cf4 ;\
           \}\
       \}\
       cout<<endl;\
   \}\
\}\
\
\cf7 // free the arrays associated in lab\cf4 \
\cf6 void\cf4  freeArrays(\cf6 int\cf4 * labs[])\{\
\
   \cf7 // free the pointer\cf4 \
   free(labs);\
\}\
\cf6 int\cf4  main()\{\
\
   \cf7 // array to store pointer\cf4 \
   \cf6 int\cf4 * labs[numberOfLabs];\
\
   \cf7 //we have \cf3 4\cf7  labs then storing size of each lab\cf4 \
   \cf6 int\cf4  labsizes[numberOfLabs];\
   cout<<\cf3 "\cf8 \\n\cf3 "\cf4 ;\
\
   cout<<\cf3 "Welcome to the LabMonitorProgram!"\cf4 <<endl;\
   cout<<\cf3 "Please enter the nuber of computer stations in each lab:"\cf4 <<endl;\
\
   \cf7 // Now reading the number of computers in lab\cf4 \
   \cf5 for\cf4 (\cf6 int\cf4  i=\cf3 0\cf4 ;i<numberOfLabs;i++)\{\
       cout<<\cf3 "How many computers in Lab "\cf4 <<i+\cf3 1\cf4 <<\cf3 "?"\cf4 ;\
       cin>>labsizes[i];\
   \}\
\
   \cf7 // calling create array\cf4 \
   createArrays(labs,labsizes);\
   \cf6 int\cf4  i,j;\
\
   \cf5 while\cf4 (\cf3 1\cf4 )\{\
       \cf7 // Option from user\cf4 \
       cout<<\cf3 "MAIN MENU\cf8 \\n\cf3 0) Quit \cf8 \\n\cf3 1) Simulate login \cf8 \\n\cf3 2)Simulate logout\cf8 \\n\cf3 3)Search"\cf4 <<endl;\
\
       \cf6 int\cf4  option;\
       cin>>option;\
\
       \cf5 if\cf4 (option == \cf3 0\cf4 )\{\
           \cf7 // exit the program\cf4 \
           cout<<\cf3 "Bye!"\cf4 <<endl;\
           \cf5 break\cf4 ;\
       \}\
\
       \cf5 else\cf4  \cf5 if\cf4 (option == \cf3 1\cf4 )\{\
           \cf7 // ask for user id\cf4 \
           \cf6 int\cf4  ID;\
           cout<<\cf3 "Enter the 5 digit ID number of the user logging in:"\cf4 <<endl;\
           cin>>ID;\
\
\
           \cf6 int\cf4  labNo,computerNo;\
           cout<<\cf3 "Enter the lab number the user is logging in from (1-"\cf4 <<numberOfLabs<<\cf3 "):"\cf4 <<endl;\
           cin>>labNo;\
                         \
           cout<<\cf3 "Enter computer station number the user is logging in to (1-"\cf4 <<labsizes[labNo-\cf3 1\cf4 ]<<\cf3 "):"\cf4 <<endl;\
           cin>>computerNo;\
\
           labs[labNo-\cf3 1\cf4 ][computerNo-\cf3 1\cf4 ] = ID;\
\
           \cf7 //Now Displaying the lab status\cf4 \
           cout<<\cf3 "LAB STATUS\cf8 \\n\cf3 Lab # Computer Stations\cf8 \\n\cf3 "\cf4 ;\
           \cf5 for\cf4 (i=\cf3 0\cf4 ;i<numberOfLabs;i++)\{\
               cout<<(i+\cf3 1\cf4 )<<\cf3 " "\cf4 ;\
               \cf5 for\cf4 (j=\cf3 0\cf4 ;j<labsizes[i];j++)\{\
                   cout<<(j+\cf3 1\cf4 )<<\cf3 ":"\cf4 ;\
                   \cf5 if\cf4 (labs[i][j] == -\cf3 1\cf4 )\{\
                       cout<<\cf3 "empty "\cf4 ;\
                   \}\
                   \cf5 else\cf4 \{\
                       cout<<labs[i][j]<<\cf3 " "\cf4 ;\
                   \}\
               \}\
               cout<<endl;\
           \}\
       \}\
       \cf5 else\cf4  \cf5 if\cf4 (option == \cf3 2\cf4 )\{\
           cout<<\cf3 "Enter the 5 digit ID number of the user logging in:"\cf4 <<endl;\
           \cf6 int\cf4  ID;\
           cin>>ID;\
\
  \cf7 // call logout function\cf4 \
           logout(labs,labsizes,ID);\
       \}\
       \cf5 else\cf4  \cf5 if\cf4 (option == \cf3 3\cf4 )\{\
           cout<<\cf3 "Enter the 5 digit ID number of the user logging in:"\cf4 <<endl;\
           \cf6 int\cf4  ID;\
           cin>>ID;\
\
  \cf7 // call search function\cf4 \
           search(labs,labsizes,ID);\
       \}\
   \}\
\
   \cf5 return\cf4  \cf3 0\cf4 ;\
\}\
                                                      }